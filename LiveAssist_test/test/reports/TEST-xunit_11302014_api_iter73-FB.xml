<testsuite name="QA Mocha Tests" tests="45" failures="3" errors="3" skipped="0" time="240.078">
<testcase classname="TC1004: Verify that session storage debug API delete sessions" name="TC1004: Verify that session storage debug API delete sessions" time="2.031"/>
<testcase classname="TC1005: Verify that session storage debug API get session ids" name="TC1005: Verify that session storage debug API get session ids" time="2.031"/>
<testcase classname="TC1006: Verify that session storage debug API get sessions and basic session storage info" name="TC1006: Verify that session storage debug API get sessions and basic session storage info" time="2.063"/>
<testcase classname="TC1007: Verify that session storage debug API get session {id} and basic session storage info" name="TC1007: Verify that session storage debug API get session {id} and basic session storage info" time="2.047"/>
<testcase classname="TC1008: Verify that session storage debug API delete specific session {id}" name="TC1008: Verify that session storage debug API delete specific session {id}" time="2.063"/>
<testcase classname="TC1010: Verify that Live Assist MRCP driven API method /startSession" name="TC1010: Verify that Live Assist MRCP driven API method /startSession" time="2.015"/>
<testcase classname="TC1011: Verify that Live Assist MRCP driven API method /endSession" name="TC1011: Verify that Live Assist MRCP driven API method /endSession" time="3"/>
<testcase classname="TC1012: Verify that Live Assist MRCP driven API method /startRecognition" name="TC1012: Verify that Live Assist MRCP driven API method /startRecognition" time="3.015"/>
<testcase classname="TC1013: Verify that Live Assist MRCP driven API method /sendRecognitionResult" name="TC1013: Verify that Live Assist MRCP driven API method /sendRecognitionResult" time="3.5"/>
<testcase classname="TC1014: Verify that Live Assist application context configuration when applicationID not exist" name="TC1014: Verify that Live Assist application context configuration when applicationID not exist" time="5.031"/>
<testcase classname="TC1015: Verify that Live Assist application context configuration load failure when configurationName does not exist" name="TC1015: Verify that Live Assist application context configuration load failure when configurationName does not exist" time="5.016"/>
<testcase classname="TC1016: Verify that Live Assist load correct application context configuration based on orgnizationID applicationID configurationName and no grammars" name="TC1016: Verify that Live Assist load correct application context configuration based on orgnizationID applicationID configurationName and no grammars" time="5.016"/>
<testcase classname="TC1017: Verify that Live Assist load application context configuration load default value when configurationName and grammars fields do not exist" name="TC1017: Verify that Live Assist load application context configuration load default value when configurationName and grammars fields do not exist" time="5.015"/>
<testcase classname="TC1018: Verify that Live Assist load correct application context configuration for valid applicationID and grammars URI that exist in the configuration" name="TC1018: Verify that Live Assist load correct application context configuration for valid applicationID and grammars URI that exist in the configuration" time="5.016"/>
<testcase classname="TC1019: Verify that Live Assist load correct application context configuration base on dnis and configurationName" name="TC1019: Verify that Live Assist load correct application context configuration base on dnis and configurationName" time="5.015"/>
<testcase classname="TC1020: Verify that updated Live Assist MRCP driven API method /sendRecognitionResult with state and completionCause check" name="TC1020: Verify that updated Live Assist MRCP driven API method /sendRecognitionResult with state and completionCause check" time="2.516"/>
<testcase classname="TC1021: Verify that system https response when sending interaction result with invalid session id" name="TC1021: Verify that system https response when sending interaction result with invalid session id" time="7.016"/>
<testcase classname="TC1022: Verify that Live Assist MRCP API /sendRecognitionResult with invalid resultMediaType EMMA or NLSML value" name="TC1022: Verify that Live Assist MRCP API /sendRecognitionResult with invalid resultMediaType EMMA or NLSML value" time="2.515"/>
<testcase classname="TC1500: Verify listing all escalation classifier instance
" name="TC1500: Verify listing all escalation classifier instance" time="2.032" message="Test case 1500 failed! Please check case log for details"><failure classname="TC1500: Verify listing all escalation classifier instance
" name="TC1500: Verify listing all escalation classifier instance" time="2.032" message="Test case 1500 failed! Please check case log for details"><![CDATA[ReferenceError: Test case 1500 failed! Please check case log for details
    at C:\LIVEAS~1\test\QA_TEST\TC1500.js:307:35
    at C:\LIVEAS~1\test\node_modules\async\lib\async.js:254:17
    at C:\LIVEAS~1\test\node_modules\async\lib\async.js:157:25
    at C:\LIVEAS~1\test\node_modules\async\lib\async.js:251:21
    at C:\LIVEAS~1\test\node_modules\async\lib\async.js:615:34
    at null._onTimeout (C:\LIVEAS~1\test\QA_TEST\TC1500.js:248:21)
    at Timer.listOnTimeout [as ontimeout] (timers.js:112:15)]]></failure></testcase>
<testcase classname="TC1501: Verify activating an escalation classifier instance to be AlwaysEscalatingEscalationClassifier 
" name="TC1501: Verify activating one of the instances  to be AlwaysEscalatingEscalationClassifier
" time="2"/>
<testcase classname="TC1502: Getting details about a particular escalationClassifier instance
" name="TC1502: Verify get details about AlwaysEscalatingEscalationClassifier - NeverEscalatingEscalationClassifier - PercentageBasedEscalationClassifier" time="2.015"/>
<testcase classname="TC1503: Getting details about AlwaysEscalatingEscalationClassifier
" name="TC1503 : Verify Getting details about AlwaysEscalatingEscalationClassifier" time="2"/>
<testcase classname="TC1504:  Verify Removing an escalation classifier instance - Verify Removing a pre-built (prepackaged) escalation classifier instance" name="TC1504: Verify Removing a pre-built  prepackaged  escalation classifier instance" time="2"/>
<testcase classname="TC1505:   Verify Uploading a new escalation classifier instance from groovy type then Removing it" name="TC1505:  Verify Uploading a new escalation classifier instance from groovy type then remove it" time="2.516"/>
<testcase classname="TC1506:   Verify updating configuration of managed instances" name="TC1506:  updating configuration of managed instances" time="2.031"/>
<testcase classname="TC1508:   Verify Uploading a new escalation classifier instance when the bytes contained in the body do not represent a valid instance of the specified type" name="TC1508:  Verify Uploading a new escalation classifier instance from application/json" time="2.016"/>
<testcase classname="TC1509:   Verify Uploading a new escalation classifier instance when the bytes contained in the body do not represent a valid instance of the specified type" name="TC1509:  Verify Uploading a new escalation classifier instance from groovy type but with compilation errors in the content of the body" time="2.015" message="

Test case 1509 failed! Please check case log for details"><failure classname="TC1509:   Verify Uploading a new escalation classifier instance when the bytes contained in the body do not represent a valid instance of the specified type" name="TC1509:  Verify Uploading a new escalation classifier instance from groovy type but with compilation errors in the content of the body" time="2.015" message="

Test case 1509 failed! Please check case log for details"><![CDATA[ReferenceError: 

Test case 1509 failed! Please check case log for details
    at C:\LIVEAS~1\test\QA_TEST\TC1509.js:303:35
    at C:\LIVEAS~1\test\node_modules\async\lib\async.js:254:17
    at C:\LIVEAS~1\test\node_modules\async\lib\async.js:157:25
    at C:\LIVEAS~1\test\node_modules\async\lib\async.js:251:21
    at C:\LIVEAS~1\test\node_modules\async\lib\async.js:615:34
    at null._onTimeout (C:\LIVEAS~1\test\QA_TEST\TC1509.js:256:21)
    at Timer.listOnTimeout [as ontimeout] (timers.js:112:15)]]></failure></testcase>
<testcase classname="TC1512:   Verify Uploading a new escalation classifier instance, then listing all, then remove it, then listing all again" name="TC1512:  Uploading a new escalation classifier instance" time="2.032"/>
<testcase classname="TC1522: Verify listing ConfidenceBasedEscalationClassifier when listing all escalation classifier instance
" name="TC1522: Verify listing ConfidenceBasedEscalationClassifier when listing all escalation classifier instances" time="2.015"/>
<testcase classname="TC1523: Verify updating configuration of managed instances of ConfidenceBasedEscalationClassifier then return to default
" name="TC1523: Verify updating configuration of managed instances of ConfidenceBasedEscalationClassifier for example confidenceThreshold to equal 0.7 then return to default\n" time="2.016"/>
<testcase classname="TC1524: Verify Invalid confidence thresholds 
" name="TC1524 : Verify updating configuration of managed instances of ConfidenceBasedEscalationClassifier for invalid value of confidenceThreshold .e.g. equal 3 then equal to -1
" time="2.015"/>
<testcase classname="TC1532:   Escalation Engine Wrapper - Verify that a newly uploaded classifier that throws an exception does not crash the VXML service, then remove the instance" name="TC1532 :  Verify Uploading a new escalation classifier instance from groovy type with exception then remove it
" time="2"/>
<testcase classname="TC1535:  Verify Removing an escalation classifier instance - Verify Removing unknown instance" name="TC1535: Verify Removing unknown instance TimeBasedEscalationClassifier" time="2.001"/>
<testcase classname="TC1536:  Verify Removing an escalation classifier instance - Verify Removing the instance TimeBasedEscalationClassifier" name="TC1536: Verify Removing unknown instance" time="2"/>
<testcase classname="TC1542: Verify call log when invoking a complete MRCP API " name="TC1542: Verify call log when invoking a complete MRCP sip " time="3.563" message="Test case 1542 failed! Please check case log for details"><failure classname="TC1542: Verify call log when invoking a complete MRCP API " name="TC1542: Verify call log when invoking a complete MRCP sip " time="3.563" message="Test case 1542 failed! Please check case log for details"><![CDATA[ReferenceError: Test case 1542 failed! Please check case log for details
    at C:\LIVEAS~1\test\QA_TEST\TC1542.js:589:35
    at C:\LIVEAS~1\test\node_modules\async\lib\async.js:254:17
    at C:\LIVEAS~1\test\node_modules\async\lib\async.js:157:25
    at C:\LIVEAS~1\test\node_modules\async\lib\async.js:251:21
    at C:\LIVEAS~1\test\node_modules\async\lib\async.js:615:34
    at null._onTimeout (C:\LIVEAS~1\test\QA_TEST\TC1542.js:505:21)
    at Timer.listOnTimeout [as ontimeout] (timers.js:112:15)]]></failure></testcase>
<testcase classname="TC1543: Verify call log when invoking a complete MRCP API with new call log hirachy" name="TC1543: Verify call log when invoking a complete MRCP sip " time="2.531"/>
<testcase classname="TC1501: Verify activating an escalation classifier instance to be ConfidenceBasedEscalationClassifier 
" name="TC1551: Verify activating one of the instances  to be ConfidenceBasedEscalationClassifier
" time="2.031"/>
<testcase classname="TC1552: Getting details about a particular escalationClassifier instance that is not exists
" name="TC1552 : Verify Getting details about a particular escalationClassifier instance that is not exists" time="2.016"/>
<testcase classname="TC1553:   Verify updating configuration of managed instances" name="TC1553:  updating configuration of managed instances of an unknown instance name " time="2"/>
<testcase classname="TC1554: Verify activating an escalation classifier instance to be PercentageBasedEscalationClassifier 
" name="TC1501: Verify activating one of the instances  to be AlwaysEscalatingEscalationClassifier
" time="2.016"/>
<testcase classname="TC1555: Verify activating an escalation classifier instance to be NeverEscalatingEscalationClassifier 
" name="TC1555: Verify activating one of the instances  to be NeverEscalatingEscalationClassifier
" time="2.015"/>
<testcase classname="TC1556:   Verify updating configuration of managed instances of an unknown property name" name="TC1556:  updating configuration of managed instances of an unknown property name " time="2"/>
<testcase classname="TC1557: Getting details about NeverEscalatingEscalationClassifier
" name="TC1557 : Verify Getting details about NeverEscalatingEscalationClassifier" time="2"/>
<testcase classname="TC1558: Getting details ConfidenceBasedEscalationClassifier
" name="TC1558 : Verify Getting details about ConfidenceBasedEscalationClassifier" time="2"/>
<testcase classname="TC1559: Getting details about PercentageBasedEscalationClassifier
" name="TC1559 : Verify Getting details about PercentageBasedEscalationClassifier" time="2"/>
</testsuite>